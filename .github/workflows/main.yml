name: Test and lint

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  backend:
    name: Run Minitest tests and RuboCop lints

    runs-on: ubuntu-latest

    # defaults:
    #   run:
    #     shell: bash
    #     working-directory: ./backend

    services:
      postgres:
        image: postgres:alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: birdybop
          POSTGRES_PASSWORD: birdybop
        ## Health check just takes a while and doesn't seem necessary; reinstate
        ## this if postgres fails to spin up in a reasonable time.
        # options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        # options: --health-cmd pg_isready --health-interval 10ms --health-timeout 500ms --health-retries 15

    strategy:
      matrix:
        ruby-version:
          - 2.7.3
          # - 2.6
          # - 2.5

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Set up Ruby v${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
          cache-version: 1
          working-directory: ./backend

      ## Should be handled by the `ruby/setup-ruby@v1` step above.
      # - name: Install dependencies
      #   run: bundle install

      - name: Create the database
        run: bundle exec rake db:create
        working-directory: ./backend

      - name: Load the database schema
        run: bundle exec rake db:schema:load
        working-directory: ./backend

      - name: Run Minitest tests
        run: bundle exec rails test
        working-directory: ./backend

      - name: Run RuboCop lints
        run: bundle exec rubocop --parallel
        working-directory: ./backend
